package com.example.orientationsensor;

import android.app.Activity;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.Surface;
import android.widget.TextView;

public class MainActivity extends Activity implements Orentation.Listener {

	private Orentation mOrientation;
	private TextView rollView, pitchView;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setContentView(R.layout.activity_main);

		mOrientation = new Orentation(
				(SensorManager) getSystemService(Activity.SENSOR_SERVICE),
				getWindow().getWindowManager());

		rollView = (TextView) findViewById(R.id.roll);
		pitchView = (TextView) findViewById(R.id.pitch);
	}
	private void updateOrientation(float[] rotationVector) {
		float[] rotationMatrix = new float[9];
		SensorManager.getRotationMatrixFromVector(rotationMatrix,
				rotationVector);

		// By default, remap the axes as if the front of the
		// device screen was the instrument panel.
		int worldAxisForDeviceAxisX = SensorManager.AXIS_X;
		int worldAxisForDeviceAxisY = SensorManager.AXIS_Z;

		// Adjust the rotation matrix for the device orientation
		int screenRotation = getWindow().getWindowManager().getDefaultDisplay().getRotation();
		if (screenRotation == Surface.ROTATION_0) {
			worldAxisForDeviceAxisX = SensorManager.AXIS_X;
			worldAxisForDeviceAxisY = SensorManager.AXIS_Z;
		} else if (screenRotation == Surface.ROTATION_90) {
			worldAxisForDeviceAxisX = SensorManager.AXIS_Z;
			worldAxisForDeviceAxisY = SensorManager.AXIS_MINUS_X;
		} else if (screenRotation == Surface.ROTATION_180) {
			worldAxisForDeviceAxisX = SensorManager.AXIS_MINUS_X;
			worldAxisForDeviceAxisY = SensorManager.AXIS_MINUS_Z;
		} else if (screenRotation == Surface.ROTATION_270) {
			worldAxisForDeviceAxisX = SensorManager.AXIS_MINUS_Z;
			worldAxisForDeviceAxisY = SensorManager.AXIS_X;
		}

		float[] adjustedRotationMatrix = new float[9];
		SensorManager.remapCoordinateSystem(rotationMatrix,
				worldAxisForDeviceAxisX, worldAxisForDeviceAxisY,
				adjustedRotationMatrix);

		// Transform rotation matrix into azimuth/pitch/roll
		float[] orientation = new float[3];
		SensorManager.getOrientation(adjustedRotationMatrix, orientation);

		// Convert radians to degrees
		float pitch = orientation[1] * -57;
		float roll = orientation[2] * -57;
		float azimuth = orientation[0] - 57;

	}

	@Override
	protected void onResume() {
		super.onResume();
		mOrientation.startListening(this);
	}

	@Override
	protected void onPause() {
		super.onPause();
		mOrientation.stopListening();
	}

	@Override
	public void onOrientationChanged(float azimfloat pitch, float roll) {
		pitchView.setText("Pitch: " + Float.toString(pitch));
		rollView.setText("Roll: " + Float.toString(roll));

	}
}
