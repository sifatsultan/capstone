package server;

import android.app.NotificationManager;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.location.LocationListener;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient;
import com.google.android.gms.location.LocationClient;
import com.google.android.gms.location.LocationRequest;

public class Location extends Service implements LocationListener,
		GooglePlayServicesClient.ConnectionCallbacks,
		GooglePlayServicesClient.OnConnectionFailedListener {

	Intent intent;
	private Messenger serviceMessenger;
	private LocationRequest mLocationRequest;
	private boolean mUpdatesRequested;
	private SharedPreferences mPrefs;
	private Editor mEditor;
	private LocationClient mLocationClient;

	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}

	@Override
	public void onCreate() {
		mLocationRequest = LocationRequest.create();
		mLocationRequest
				.setInterval(LocationUtils.UPDATE_INTERVAL_IN_MILLISECONDS);
		mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
		mLocationRequest
				.setFastestInterval(LocationUtils.FAST_INTERVAL_CEILING_IN_MILLISECONDS);
		// Note that location updates are off until the user turns them on
		mUpdatesRequested = false;
		// Open Shared Preferences
		mPrefs = getSharedPreferences(LocationUtils.SHARED_PREFERENCES,
				Context.MODE_PRIVATE);
		mEditor = mPrefs.edit();

		mLocationClient = new LocationClient(this, this, this);

	}

	public void sendMessage(String string) {

		try {
			Bundle bundle = new Bundle();
			bundle.putString("message", string);

			Message message = new Message();
			message.setData(bundle);

			serviceMessenger.send(message);
		} catch (RemoteException e) {
			e.printStackTrace();
		}

	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Bundle extras = intent.getExtras();
		serviceMessenger = (Messenger) extras.get("ActMessenger");
		sendMessage("Service Created");
		return Service.START_NOT_STICKY;
	}

	@Override
	public void onConnectionFailed(ConnectionResult arg0) {

	}

	@Override
	public void onConnected(Bundle arg0) {
		sendMessage("Location Client is connected");
		String locString = "Latitude :"
				+ mLocationClient.getLastLocation().getLatitude()
				+ "Longitude :"
				+ mLocationClient.getLastLocation().getLongitude();
		sendMessage(locString);
	}

	@Override
	public void onDisconnected() {
		sendMessage("Location Client is disconnected");

	}

	@Override
	public void onLocationChanged(android.location.Location location) {
		String locString = "Latitude :" + location.getLatitude()
				+ "Longitude :" + location.getLongitude();
		sendMessage(locString);
	}

	@Override
	public void onProviderDisabled(String provider) {

	}

	@Override
	public void onProviderEnabled(String provider) {

	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {

	}

}
