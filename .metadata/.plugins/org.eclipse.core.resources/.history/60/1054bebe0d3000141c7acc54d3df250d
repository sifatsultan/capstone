package server;

import java.io.IOException;
import java.net.DatagramPacket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import util.SerialInputOutputManager;
import android.app.Activity;
import android.content.Context;
import android.content.res.Resources;
import android.hardware.usb.UsbManager;
import android.widget.TextView;

import com.example.server.R;

import driver.UsbSerialDriver;
import driver.UsbSerialProber;

public class USBThread extends Thread {

	private Peace peace;
	private Activity activity;
	private Context context;

	private UsbManager usbManager;
	private UsbSerialDriver usbSerialDriver;

	private TextView terminal;

	private final ExecutorService mExecutor = Executors
			.newSingleThreadExecutor();

	private SerialInputOutputManager mSerialIoManager;

	public USBThread(Activity activity, TextView textView) {
		peace = new Peace(activity);
		context = this.activity.getApplicationContext();
		terminal = textView;
		usbManager = (UsbManager) context.getSystemService(Context.USB_SERVICE);
	}


	public void run() {

		// Wait for USB to connect
		// and install driver
		while (usbSerialDriver == null) {
			try {
				usbSerialDriver = UsbSerialProber.findFirstDevice(usbManager);
			} catch (Exception e) {

			}
			// USB found!
			// Initialize USB Serial Output parameter
			if (usbSerialDriver != null) {
				try {
					usbSerialDriver.open();
					usbSerialDriver.setParameters(1200, 8,
							UsbSerialDriver.STOPBITS_1,
							UsbSerialDriver.PARITY_NONE);
				} catch (IOException e) {
					e.printStackTrace();
				}

				// Initialize USB Serial Input listener
				mSerialIoManager = new SerialInputOutputManager(
						usbSerialDriver, mListener);
				mExecutor.submit(mSerialIoManager);

				// Release the loop
				break;
			}
		}
	}

	private SerialInputOutputManager.Listener mListener = new SerialInputOutputManager.Listener() {

		@Override
		public void onRunError(Exception e) {
			peace.append(terminal, e.toString());
		}

		@Override
		public void onNewData(final byte[] data) {
			updateReceivedData(data);

		}
	};

	private void updateReceivedData(byte[] data) {
		String messageByteArrayToString = new String(data);
		peace.append(terminal, messageByteArrayToString);
	}

	public void send(byte[] lMsg) {

		// Send byte once USB found and initialized...
		if (usbSerialDriver != null) {
			try {

				usbSerialDriver.write(new byte[] { lMsg[0], lMsg[1], lMsg[2],
						lMsg[3], lMsg[4], lMsg[5], lMsg[6] }, 2000);

			} catch (IOException e) {
				e.printStackTrace();
			}
		}

	}

}
